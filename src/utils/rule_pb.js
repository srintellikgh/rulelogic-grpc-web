// source: rule.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = function () {
  return this || window || global || self || Function('return this')();
}.call(null);

var common_common_pb = require('./common_pb.js');
goog.object.extend(proto, common_common_pb);
var location_pb = require('./location_pb.js');
goog.object.extend(proto, location_pb);
var weather_pb = require('./weather_pb.js');
goog.object.extend(proto, weather_pb);
var party_pb = require('./party_pb.js');
goog.object.extend(proto, party_pb);
goog.exportSymbol('proto.io.rulelogic.api.EventRuleLinkRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.EventRulesListRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.Rule', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleAnalytics', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleDmlCreateRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleDmlCreateResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleDmlDeleteResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleDmlUpdateRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleDmlUpdateResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleInfo', null, global);
goog.exportSymbol('proto.io.rulelogic.api.RuleListResponse', null, global);
goog.exportSymbol(
  'proto.io.rulelogic.api.RuleSearchByTypeListRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.RuleSearchSingleResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.RuleStatusChangeRequest',
  null,
  global
);
goog.exportSymbol('proto.io.rulelogic.api.RuleType', null, global);
goog.exportSymbol('proto.io.rulelogic.api.Temporal', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.Temporal = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.Temporal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.Temporal.displayName =
    'proto.io.rulelogic.api.Temporal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleInfo.displayName =
    'proto.io.rulelogic.api.RuleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleAnalytics = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleAnalytics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleAnalytics.displayName =
    'proto.io.rulelogic.api.RuleAnalytics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.Rule = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.Rule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.Rule.displayName = 'proto.io.rulelogic.api.Rule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventRuleLinkRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventRuleLinkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventRuleLinkRequest.displayName =
    'proto.io.rulelogic.api.EventRuleLinkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventRulesListRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventRulesListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventRulesListRequest.displayName =
    'proto.io.rulelogic.api.EventRulesListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleSearchSingleResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleSearchSingleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleSearchSingleResponse.displayName =
    'proto.io.rulelogic.api.RuleSearchSingleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleListResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.io.rulelogic.api.RuleListResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.io.rulelogic.api.RuleListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleListResponse.displayName =
    'proto.io.rulelogic.api.RuleListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleSearchByTypeListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleSearchByTypeListRequest.displayName =
    'proto.io.rulelogic.api.RuleSearchByTypeListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleDmlCreateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleDmlCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleDmlCreateRequest.displayName =
    'proto.io.rulelogic.api.RuleDmlCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleDmlCreateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleDmlCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleDmlCreateResponse.displayName =
    'proto.io.rulelogic.api.RuleDmlCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleStatusChangeRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleStatusChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleStatusChangeRequest.displayName =
    'proto.io.rulelogic.api.RuleStatusChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleDmlUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleDmlUpdateResponse.displayName =
    'proto.io.rulelogic.api.RuleDmlUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleDmlUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleDmlUpdateRequest.displayName =
    'proto.io.rulelogic.api.RuleDmlUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.RuleDmlDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.RuleDmlDeleteResponse.displayName =
    'proto.io.rulelogic.api.RuleDmlDeleteResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.Temporal.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.Temporal.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.Temporal} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.Temporal.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        year: jspb.Message.getFieldWithDefault(msg, 1, ''),
        month: jspb.Message.getFieldWithDefault(msg, 2, ''),
        dayofmonth: jspb.Message.getFieldWithDefault(msg, 3, ''),
        dayofweek: jspb.Message.getFieldWithDefault(msg, 4, ''),
        hour: jspb.Message.getFieldWithDefault(msg, 5, ''),
        minute: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.Temporal}
 */
proto.io.rulelogic.api.Temporal.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.Temporal();
  return proto.io.rulelogic.api.Temporal.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.Temporal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.Temporal}
 */
proto.io.rulelogic.api.Temporal.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setYear(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMonth(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDayofmonth(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDayofweek(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setHour(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setMinute(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.Temporal.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.Temporal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.Temporal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Temporal.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMonth();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDayofmonth();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDayofweek();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getHour();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getMinute();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional string year = 1;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getYear = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setYear = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string month = 2;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getMonth = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setMonth = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string dayOfMonth = 3;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getDayofmonth = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setDayofmonth = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string dayOfWeek = 4;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getDayofweek = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setDayofweek = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string hour = 5;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getHour = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setHour = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string minute = 6;
 * @return {string}
 */
proto.io.rulelogic.api.Temporal.prototype.getMinute = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Temporal} returns this
 */
proto.io.rulelogic.api.Temporal.prototype.setMinute = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleInfo.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleInfo.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        ownerpartypk: jspb.Message.getFieldWithDefault(msg, 2, ''),
        ownertitle: jspb.Message.getFieldWithDefault(msg, 3, ''),
        recordtitlefirstletter: jspb.Message.getFieldWithDefault(msg, 4, ''),
        recordtitlecolor: jspb.Message.getFieldWithDefault(msg, 5, ''),
        isstatuson: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        querytotalrecord: jspb.Message.getFieldWithDefault(msg, 10, 0),
        isviewerpartyrecordowner: jspb.Message.getBooleanFieldWithDefault(
          msg,
          20,
          false
        ),
        hasviewersubscribed: jspb.Message.getBooleanFieldWithDefault(
          msg,
          21,
          false
        ),
        hasviewerfavouritedrecord: jspb.Message.getBooleanFieldWithDefault(
          msg,
          22,
          false
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleInfo}
 */
proto.io.rulelogic.api.RuleInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleInfo();
  return proto.io.rulelogic.api.RuleInfo.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleInfo}
 */
proto.io.rulelogic.api.RuleInfo.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwnerpartypk(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwnertitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordtitlefirstletter(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordtitlecolor(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsstatuson(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setQuerytotalrecord(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsviewerpartyrecordowner(value);
        break;
      case 21:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHasviewersubscribed(value);
        break;
      case 22:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHasviewerfavouritedrecord(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.RuleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleInfo.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwnerpartypk();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOwnertitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getRecordtitlefirstletter();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getRecordtitlecolor();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getIsstatuson();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getQuerytotalrecord();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getIsviewerpartyrecordowner();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getHasviewersubscribed();
  if (f) {
    writer.writeBool(21, f);
  }
  f = message.getHasviewerfavouritedrecord();
  if (f) {
    writer.writeBool(22, f);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string ownerPartyPk = 2;
 * @return {string}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getOwnerpartypk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setOwnerpartypk = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string ownerTitle = 3;
 * @return {string}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getOwnertitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setOwnertitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string recordTitleFirstLetter = 4;
 * @return {string}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getRecordtitlefirstletter =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 4, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setRecordtitlefirstletter = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string recordTitleColor = 5;
 * @return {string}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getRecordtitlecolor = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setRecordtitlecolor = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool isStatusOn = 9;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getIsstatuson = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setIsstatuson = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional int32 queryTotalRecord = 10;
 * @return {number}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getQuerytotalrecord = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setQuerytotalrecord = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional bool isViewerPartyRecordOwner = 20;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getIsviewerpartyrecordowner =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 20, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setIsviewerpartyrecordowner =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 20, value);
  };

/**
 * optional bool hasViewerSubscribed = 21;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getHasviewersubscribed = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 21, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setHasviewersubscribed = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};

/**
 * optional bool hasViewerFavouritedRecord = 22;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleInfo.prototype.getHasviewerfavouritedrecord =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 22, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleInfo} returns this
 */
proto.io.rulelogic.api.RuleInfo.prototype.setHasviewerfavouritedrecord =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 22, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleAnalytics.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleAnalytics.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleAnalytics} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleAnalytics.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        eventscount: jspb.Message.getFieldWithDefault(msg, 10, 0),
        subscriberscount: jspb.Message.getFieldWithDefault(msg, 12, 0),
        favouritescount: jspb.Message.getFieldWithDefault(msg, 13, 0),
        reviewscount: jspb.Message.getFieldWithDefault(msg, 14, 0),
        reviewrating: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          15,
          0.0
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleAnalytics}
 */
proto.io.rulelogic.api.RuleAnalytics.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleAnalytics();
  return proto.io.rulelogic.api.RuleAnalytics.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleAnalytics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleAnalytics}
 */
proto.io.rulelogic.api.RuleAnalytics.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setEventscount(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSubscriberscount(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setFavouritescount(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setReviewscount(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReviewrating(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.RuleAnalytics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleAnalytics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleAnalytics.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEventscount();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getSubscriberscount();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getFavouritescount();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getReviewscount();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getReviewrating();
  if (f !== 0.0) {
    writer.writeDouble(15, f);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 eventsCount = 10;
 * @return {number}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getEventscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setEventscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int32 subscribersCount = 12;
 * @return {number}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getSubscriberscount =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFieldWithDefault(this, 12, 0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setSubscriberscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 favouritesCount = 13;
 * @return {number}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getFavouritescount =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFieldWithDefault(this, 13, 0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setFavouritescount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 reviewsCount = 14;
 * @return {number}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getReviewscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setReviewscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional double reviewRating = 15;
 * @return {number}
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.getReviewrating = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleAnalytics} returns this
 */
proto.io.rulelogic.api.RuleAnalytics.prototype.setReviewrating = function (
  value
) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.Rule.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.Rule.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.Rule} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.Rule.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        code: jspb.Message.getFieldWithDefault(msg, 2, ''),
        title: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        pricecurrency: jspb.Message.getFieldWithDefault(msg, 5, ''),
        unitprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
        partypk: jspb.Message.getFieldWithDefault(msg, 8, ''),
        createevent: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        recordenabled: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
        createactionsms: jspb.Message.getBooleanFieldWithDefault(
          msg,
          13,
          false
        ),
        createactionemail: jspb.Message.getBooleanFieldWithDefault(
          msg,
          15,
          false
        ),
        recordstatus: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
        ownerparty:
          (f = msg.getOwnerparty()) &&
          party_pb.Party.toObject(includeInstance, f),
        isrecordowner: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
        info:
          (f = msg.getInfo()) &&
          proto.io.rulelogic.api.RuleInfo.toObject(includeInstance, f),
        analytics:
          (f = msg.getAnalytics()) &&
          proto.io.rulelogic.api.RuleAnalytics.toObject(includeInstance, f),
        recordtype: jspb.Message.getFieldWithDefault(msg, 30, 0),
        visibility: jspb.Message.getFieldWithDefault(msg, 31, 0),
        location:
          (f = msg.getLocation()) &&
          location_pb.Location.toObject(includeInstance, f),
        temporal:
          (f = msg.getTemporal()) &&
          proto.io.rulelogic.api.Temporal.toObject(includeInstance, f),
        weather:
          (f = msg.getWeather()) &&
          weather_pb.Weather.toObject(includeInstance, f),
        omd:
          (f = msg.getOmd()) &&
          common_common_pb.Omd.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.Rule.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.Rule();
  return proto.io.rulelogic.api.Rule.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.Rule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.Rule.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPricecurrency(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setUnitprice(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPartypk(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCreateevent(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRecordenabled(value);
        break;
      case 13:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCreateactionsms(value);
        break;
      case 15:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCreateactionemail(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRecordstatus(value);
        break;
      case 19:
        var value = new party_pb.Party();
        reader.readMessage(value, party_pb.Party.deserializeBinaryFromReader);
        msg.setOwnerparty(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsrecordowner(value);
        break;
      case 21:
        var value = new proto.io.rulelogic.api.RuleInfo();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.RuleInfo.deserializeBinaryFromReader
        );
        msg.setInfo(value);
        break;
      case 22:
        var value = new proto.io.rulelogic.api.RuleAnalytics();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.RuleAnalytics.deserializeBinaryFromReader
        );
        msg.setAnalytics(value);
        break;
      case 30:
        var value = /** @type {!proto.io.rulelogic.api.RuleType} */ (
          reader.readEnum()
        );
        msg.setRecordtype(value);
        break;
      case 31:
        var value = /** @type {!proto.io.rulelogic.api.VisibilityType} */ (
          reader.readEnum()
        );
        msg.setVisibility(value);
        break;
      case 32:
        var value = new location_pb.Location();
        reader.readMessage(
          value,
          location_pb.Location.deserializeBinaryFromReader
        );
        msg.setLocation(value);
        break;
      case 33:
        var value = new proto.io.rulelogic.api.Temporal();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.Temporal.deserializeBinaryFromReader
        );
        msg.setTemporal(value);
        break;
      case 34:
        var value = new weather_pb.Weather();
        reader.readMessage(
          value,
          weather_pb.Weather.deserializeBinaryFromReader
        );
        msg.setWeather(value);
        break;
      case 35:
        var value = new common_common_pb.Omd();
        reader.readMessage(
          value,
          common_common_pb.Omd.deserializeBinaryFromReader
        );
        msg.setOmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.Rule.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.Rule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.Rule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Rule.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getPricecurrency();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getUnitprice();
  if (f !== 0.0) {
    writer.writeFloat(6, f);
  }
  f = message.getPartypk();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getCreateevent();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getRecordenabled();
  if (f) {
    writer.writeBool(10, f);
  }
  f = message.getCreateactionsms();
  if (f) {
    writer.writeBool(13, f);
  }
  f = message.getCreateactionemail();
  if (f) {
    writer.writeBool(15, f);
  }
  f = message.getRecordstatus();
  if (f) {
    writer.writeBool(16, f);
  }
  f = message.getOwnerparty();
  if (f != null) {
    writer.writeMessage(19, f, party_pb.Party.serializeBinaryToWriter);
  }
  f = message.getIsrecordowner();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.io.rulelogic.api.RuleInfo.serializeBinaryToWriter
    );
  }
  f = message.getAnalytics();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.io.rulelogic.api.RuleAnalytics.serializeBinaryToWriter
    );
  }
  f = message.getRecordtype();
  if (f !== 0.0) {
    writer.writeEnum(30, f);
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(31, f);
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(32, f, location_pb.Location.serializeBinaryToWriter);
  }
  f = message.getTemporal();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.io.rulelogic.api.Temporal.serializeBinaryToWriter
    );
  }
  f = message.getWeather();
  if (f != null) {
    writer.writeMessage(34, f, weather_pb.Weather.serializeBinaryToWriter);
  }
  f = message.getOmd();
  if (f != null) {
    writer.writeMessage(35, f, common_common_pb.Omd.serializeBinaryToWriter);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string title = 3;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string priceCurrency = 5;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getPricecurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setPricecurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional float unitPrice = 6;
 * @return {number}
 */
proto.io.rulelogic.api.Rule.prototype.getUnitprice = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setUnitprice = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

/**
 * optional string partyPk = 8;
 * @return {string}
 */
proto.io.rulelogic.api.Rule.prototype.getPartypk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setPartypk = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional bool createEvent = 9;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getCreateevent = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setCreateevent = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional bool recordEnabled = 10;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getRecordenabled = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 10, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setRecordenabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * optional bool createActionSms = 13;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getCreateactionsms = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 13, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setCreateactionsms = function (value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};

/**
 * optional bool createActionEmail = 15;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getCreateactionemail = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 15, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setCreateactionemail = function (value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};

/**
 * optional bool recordStatus = 16;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getRecordstatus = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 16, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setRecordstatus = function (value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};

/**
 * optional Party ownerParty = 19;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.Rule.prototype.getOwnerparty = function () {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, party_pb.Party, 19)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setOwnerparty = function (value) {
  return jspb.Message.setWrapperField(this, 19, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearOwnerparty = function () {
  return this.setOwnerparty(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasOwnerparty = function () {
  return jspb.Message.getField(this, 19) != null;
};

/**
 * optional bool isRecordOwner = 20;
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.getIsrecordowner = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 20, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setIsrecordowner = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};

/**
 * optional RuleInfo info = 21;
 * @return {?proto.io.rulelogic.api.RuleInfo}
 */
proto.io.rulelogic.api.Rule.prototype.getInfo = function () {
  return /** @type{?proto.io.rulelogic.api.RuleInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.RuleInfo, 21)
  );
};

/**
 * @param {?proto.io.rulelogic.api.RuleInfo|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setInfo = function (value) {
  return jspb.Message.setWrapperField(this, 21, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearInfo = function () {
  return this.setInfo(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasInfo = function () {
  return jspb.Message.getField(this, 21) != null;
};

/**
 * optional RuleAnalytics analytics = 22;
 * @return {?proto.io.rulelogic.api.RuleAnalytics}
 */
proto.io.rulelogic.api.Rule.prototype.getAnalytics = function () {
  return /** @type{?proto.io.rulelogic.api.RuleAnalytics} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.RuleAnalytics, 22)
  );
};

/**
 * @param {?proto.io.rulelogic.api.RuleAnalytics|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setAnalytics = function (value) {
  return jspb.Message.setWrapperField(this, 22, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearAnalytics = function () {
  return this.setAnalytics(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasAnalytics = function () {
  return jspb.Message.getField(this, 22) != null;
};

/**
 * optional RuleType recordType = 30;
 * @return {!proto.io.rulelogic.api.RuleType}
 */
proto.io.rulelogic.api.Rule.prototype.getRecordtype = function () {
  return /** @type {!proto.io.rulelogic.api.RuleType} */ (
    jspb.Message.getFieldWithDefault(this, 30, 0)
  );
};

/**
 * @param {!proto.io.rulelogic.api.RuleType} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setRecordtype = function (value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};

/**
 * optional VisibilityType visibility = 31;
 * @return {!proto.io.rulelogic.api.VisibilityType}
 */
proto.io.rulelogic.api.Rule.prototype.getVisibility = function () {
  return /** @type {!proto.io.rulelogic.api.VisibilityType} */ (
    jspb.Message.getFieldWithDefault(this, 31, 0)
  );
};

/**
 * @param {!proto.io.rulelogic.api.VisibilityType} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setVisibility = function (value) {
  return jspb.Message.setProto3EnumField(this, 31, value);
};

/**
 * optional Location location = 32;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.Rule.prototype.getLocation = function () {
  return /** @type{?proto.io.rulelogic.api.Location} */ (
    jspb.Message.getWrapperField(this, location_pb.Location, 32)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setLocation = function (value) {
  return jspb.Message.setWrapperField(this, 32, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearLocation = function () {
  return this.setLocation(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasLocation = function () {
  return jspb.Message.getField(this, 32) != null;
};

/**
 * optional Temporal temporal = 33;
 * @return {?proto.io.rulelogic.api.Temporal}
 */
proto.io.rulelogic.api.Rule.prototype.getTemporal = function () {
  return /** @type{?proto.io.rulelogic.api.Temporal} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Temporal, 33)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Temporal|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setTemporal = function (value) {
  return jspb.Message.setWrapperField(this, 33, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearTemporal = function () {
  return this.setTemporal(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasTemporal = function () {
  return jspb.Message.getField(this, 33) != null;
};

/**
 * optional Weather weather = 34;
 * @return {?proto.io.rulelogic.api.Weather}
 */
proto.io.rulelogic.api.Rule.prototype.getWeather = function () {
  return /** @type{?proto.io.rulelogic.api.Weather} */ (
    jspb.Message.getWrapperField(this, weather_pb.Weather, 34)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Weather|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setWeather = function (value) {
  return jspb.Message.setWrapperField(this, 34, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearWeather = function () {
  return this.setWeather(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasWeather = function () {
  return jspb.Message.getField(this, 34) != null;
};

/**
 * optional Omd omd = 35;
 * @return {?proto.io.rulelogic.api.Omd}
 */
proto.io.rulelogic.api.Rule.prototype.getOmd = function () {
  return /** @type{?proto.io.rulelogic.api.Omd} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Omd, 35)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Omd|undefined} value
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.setOmd = function (value) {
  return jspb.Message.setWrapperField(this, 35, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Rule} returns this
 */
proto.io.rulelogic.api.Rule.prototype.clearOmd = function () {
  return this.setOmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Rule.prototype.hasOmd = function () {
  return jspb.Message.getField(this, 35) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventRuleLinkRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventRuleLinkRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventRuleLinkRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventRuleLinkRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        eventpk: jspb.Message.getFieldWithDefault(msg, 2, ''),
        enable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventRuleLinkRequest();
  return proto.io.rulelogic.api.EventRuleLinkRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventRuleLinkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setEventpk(value);
          break;
        case 3:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setEnable(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventRuleLinkRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventRuleLinkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventRuleLinkRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEventpk();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getAuthdetail();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_common_pb.AuthDetail.serializeBinaryToWriter
    );
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest} returns this
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string eventPk = 2;
 * @return {string}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.getEventpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest} returns this
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.setEventpk = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool enable = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.getEnable = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest} returns this
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.setEnable = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest} returns this
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.setAuthdetail = function (
  value
) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventRuleLinkRequest} returns this
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventRuleLinkRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventRulesListRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventRulesListRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventRulesListRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventRulesListRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        eventkey: jspb.Message.getFieldWithDefault(msg, 1, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventRulesListRequest}
 */
proto.io.rulelogic.api.EventRulesListRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventRulesListRequest();
  return proto.io.rulelogic.api.EventRulesListRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventRulesListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventRulesListRequest}
 */
proto.io.rulelogic.api.EventRulesListRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setEventkey(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventRulesListRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventRulesListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventRulesListRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEventkey();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string eventKey = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.getEventkey =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventRulesListRequest} returns this
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.setEventkey = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventRulesListRequest} returns this
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventRulesListRequest} returns this
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventRulesListRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.RuleSearchSingleResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleSearchSingleResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleSearchSingleResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rule:
          (f = msg.getRule()) &&
          proto.io.rulelogic.api.Rule.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
        recordmetadata:
          (f = msg.getRecordmetadata()) &&
          common_common_pb.RecordMetadata.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleSearchSingleResponse();
  return proto.io.rulelogic.api.RuleSearchSingleResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleSearchSingleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Rule();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
          );
          msg.setRule(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        case 3:
          var value = new common_common_pb.RecordMetadata();
          reader.readMessage(
            value,
            common_common_pb.RecordMetadata.deserializeBinaryFromReader
          );
          msg.setRecordmetadata(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleSearchSingleResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleSearchSingleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getRule();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Rule.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
    f = message.getRecordmetadata();
    if (f != null) {
      writer.writeMessage(
        3,
        f,
        common_common_pb.RecordMetadata.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Rule rule = 1;
 * @return {?proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.getRule =
  function () {
    return /** @type{?proto.io.rulelogic.api.Rule} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Rule, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Rule|undefined} value
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.setRule = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.clearRule =
  function () {
    return this.setRule(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.hasRule =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * optional RecordMetadata recordMetadata = 3;
 * @return {?proto.io.rulelogic.api.RecordMetadata}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.getRecordmetadata =
  function () {
    return /** @type{?proto.io.rulelogic.api.RecordMetadata} */ (
      jspb.Message.getWrapperField(this, common_common_pb.RecordMetadata, 3)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.RecordMetadata|undefined} value
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.setRecordmetadata =
  function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.clearRecordmetadata =
  function () {
    return this.setRecordmetadata(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleSearchSingleResponse.prototype.hasRecordmetadata =
  function () {
    return jspb.Message.getField(this, 3) != null;
  };

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.rulelogic.api.RuleListResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleListResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleListResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleListResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleListResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        rulesList: jspb.Message.toObjectList(
          msg.getRulesList(),
          proto.io.rulelogic.api.Rule.toObject,
          includeInstance
        ),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleListResponse}
 */
proto.io.rulelogic.api.RuleListResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleListResponse();
  return proto.io.rulelogic.api.RuleListResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleListResponse}
 */
proto.io.rulelogic.api.RuleListResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSkip(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setLimit(value);
        break;
      case 3:
        var value = new proto.io.rulelogic.api.Rule();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
        );
        msg.addRules(value);
        break;
      case 4:
        var value = new common_common_pb.ResponseStatus();
        reader.readMessage(
          value,
          common_common_pb.ResponseStatus.deserializeBinaryFromReader
        );
        msg.setResponsestatus(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleListResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleListResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.rulelogic.api.Rule.serializeBinaryToWriter
    );
  }
  f = message.getResponsestatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.ResponseStatus.serializeBinaryToWriter
    );
  }
};

/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.getSkip = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.setSkip = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.getLimit = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.setLimit = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * repeated Rule rules = 3;
 * @return {!Array<!proto.io.rulelogic.api.Rule>}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.getRulesList = function () {
  return /** @type{!Array<!proto.io.rulelogic.api.Rule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.rulelogic.api.Rule, 3)
  );
};

/**
 * @param {!Array<!proto.io.rulelogic.api.Rule>} value
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.setRulesList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.io.rulelogic.api.Rule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.addRules = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.io.rulelogic.api.Rule,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.clearRulesList = function () {
  return this.setRulesList([]);
};

/**
 * optional ResponseStatus responseStatus = 4;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 4)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.setResponsestatus = function (
  value
) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleListResponse} returns this
 */
proto.io.rulelogic.api.RuleListResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleListResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 4) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.RuleSearchByTypeListRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleSearchByTypeListRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        searchscope: jspb.Message.getFieldWithDefault(msg, 3, 0),
        ruletype: jspb.Message.getFieldWithDefault(msg, 4, 0),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.rulelogic.api.RuleSearchByTypeListRequest();
    return proto.io.rulelogic.api.RuleSearchByTypeListRequest.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setSkip(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setLimit(value);
          break;
        case 3:
          var value = /** @type {!proto.io.rulelogic.api.SearchScope} */ (
            reader.readEnum()
          );
          msg.setSearchscope(value);
          break;
        case 4:
          var value = /** @type {!proto.io.rulelogic.api.RuleType} */ (
            reader.readEnum()
          );
          msg.setRuletype(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleSearchByTypeListRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getSkip();
    if (f !== 0) {
      writer.writeInt32(1, f);
    }
    f = message.getLimit();
    if (f !== 0) {
      writer.writeInt32(2, f);
    }
    f = message.getSearchscope();
    if (f !== 0.0) {
      writer.writeEnum(3, f);
    }
    f = message.getRuletype();
    if (f !== 0.0) {
      writer.writeEnum(4, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.getSkip =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.setSkip =
  function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
  };

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.getLimit =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.setLimit =
  function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
  };

/**
 * optional SearchScope searchScope = 3;
 * @return {!proto.io.rulelogic.api.SearchScope}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.getSearchscope =
  function () {
    return /** @type {!proto.io.rulelogic.api.SearchScope} */ (
      jspb.Message.getFieldWithDefault(this, 3, 0)
    );
  };

/**
 * @param {!proto.io.rulelogic.api.SearchScope} value
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.setSearchscope =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 3, value);
  };

/**
 * optional RuleType ruleType = 4;
 * @return {!proto.io.rulelogic.api.RuleType}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.getRuletype =
  function () {
    return /** @type {!proto.io.rulelogic.api.RuleType} */ (
      jspb.Message.getFieldWithDefault(this, 4, 0)
    );
  };

/**
 * @param {!proto.io.rulelogic.api.RuleType} value
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.setRuletype =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 4, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleSearchByTypeListRequest} returns this
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleSearchByTypeListRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleDmlCreateRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleDmlCreateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleDmlCreateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rule:
          (f = msg.getRule()) &&
          proto.io.rulelogic.api.Rule.toObject(includeInstance, f),
        requestmessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleDmlCreateRequest();
  return proto.io.rulelogic.api.RuleDmlCreateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleDmlCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Rule();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
          );
          msg.setRule(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setRequestmessage(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleDmlCreateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleDmlCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Rule.serializeBinaryToWriter
    );
  }
  f = message.getRequestmessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAuthdetail();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_common_pb.AuthDetail.serializeBinaryToWriter
    );
  }
};

/**
 * optional Rule rule = 1;
 * @return {?proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.getRule = function () {
  return /** @type{?proto.io.rulelogic.api.Rule} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Rule, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Rule|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.setRule = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.clearRule = function () {
  return this.setRule(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.hasRule = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.getRequestmessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.setRequestmessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.setAuthdetail = function (
  value
) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlCreateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleDmlCreateResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleDmlCreateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleDmlCreateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rule:
          (f = msg.getRule()) &&
          proto.io.rulelogic.api.Rule.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleDmlCreateResponse();
  return proto.io.rulelogic.api.RuleDmlCreateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleDmlCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Rule();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
          );
          msg.setRule(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleDmlCreateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleDmlCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getRule();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Rule.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Rule rule = 1;
 * @return {?proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.getRule = function () {
  return /** @type{?proto.io.rulelogic.api.Rule} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Rule, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Rule|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.setRule = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.clearRule = function () {
  return this.setRule(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.hasRule = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlCreateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleStatusChangeRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleStatusChangeRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleStatusChangeRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        status: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        recordownerpartypk: jspb.Message.getFieldWithDefault(msg, 3, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
        issuperuser: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleStatusChangeRequest();
  return proto.io.rulelogic.api.RuleStatusChangeRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleStatusChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setStatus(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setRecordownerpartypk(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        case 13:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setIssuperuser(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleStatusChangeRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleStatusChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getStatus();
    if (f) {
      writer.writeBool(2, f);
    }
    f = message.getRecordownerpartypk();
    if (f.length > 0) {
      writer.writeString(3, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
    f = message.getIssuperuser();
    if (f) {
      writer.writeBool(13, f);
    }
  };

/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.setId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool status = 2;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.getStatus =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 2, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.setStatus = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional string recordOwnerPartyPk = 3;
 * @return {string}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.getRecordownerpartypk =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 3, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.setRecordownerpartypk =
  function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

/**
 * optional bool isSuperUser = 13;
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.getIssuperuser =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 13, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.RuleStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.RuleStatusChangeRequest.prototype.setIssuperuser =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 13, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleDmlUpdateResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleDmlUpdateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleDmlUpdateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rule:
          (f = msg.getRule()) &&
          proto.io.rulelogic.api.Rule.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleDmlUpdateResponse();
  return proto.io.rulelogic.api.RuleDmlUpdateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleDmlUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Rule();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
          );
          msg.setRule(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleDmlUpdateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleDmlUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getRule();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Rule.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Rule rule = 1;
 * @return {?proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.getRule = function () {
  return /** @type{?proto.io.rulelogic.api.Rule} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Rule, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Rule|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.setRule = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.clearRule = function () {
  return this.setRule(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.hasRule = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlUpdateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleDmlUpdateRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleDmlUpdateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleDmlUpdateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rule:
          (f = msg.getRule()) &&
          proto.io.rulelogic.api.Rule.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleDmlUpdateRequest();
  return proto.io.rulelogic.api.RuleDmlUpdateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleDmlUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Rule();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Rule.deserializeBinaryFromReader
          );
          msg.setRule(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleDmlUpdateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleDmlUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Rule.serializeBinaryToWriter
    );
  }
  f = message.getResponsestatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.ResponseStatus.serializeBinaryToWriter
    );
  }
  f = message.getAuthdetail();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_common_pb.AuthDetail.serializeBinaryToWriter
    );
  }
};

/**
 * optional Rule rule = 1;
 * @return {?proto.io.rulelogic.api.Rule}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.getRule = function () {
  return /** @type{?proto.io.rulelogic.api.Rule} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Rule, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Rule|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.setRule = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.clearRule = function () {
  return this.setRule(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.hasRule = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.setAuthdetail = function (
  value
) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlUpdateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.RuleDmlDeleteResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.RuleDmlDeleteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.RuleDmlDeleteResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.RuleDmlDeleteResponse}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.RuleDmlDeleteResponse();
  return proto.io.rulelogic.api.RuleDmlDeleteResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.RuleDmlDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.RuleDmlDeleteResponse}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.RuleDmlDeleteResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.RuleDmlDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.RuleDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.setId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.RuleDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.RuleDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.RuleDmlDeleteResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * @enum {number}
 */
proto.io.rulelogic.api.RuleType = {
  GENERIC: 0,
  TEMPORAL: 1,
  WEATHER: 2,
  FINANCIAL: 3,
  EVENT_METRICS: 4,
  WEB_HOOKS: 5,
  TRAVEL: 6,
  NEWS: 7,
  RULE_API: 8,
  OTHER_RULE: 1000,
};

goog.object.extend(exports, proto.io.rulelogic.api);
