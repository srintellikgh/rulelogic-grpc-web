// source: party.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_common_pb = require('./common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.io.rulelogic.api.AuthenticateRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.AuthenticateResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.EventSubscriberListRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.LoginRequestStatus', null, global);
goog.exportSymbol('proto.io.rulelogic.api.LoginStatus', null, global);
goog.exportSymbol('proto.io.rulelogic.api.Party', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlCreateRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlCreateResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlDeleteRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlDeleteResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlUpdateRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyDmlUpdateResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyListResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartySearchByKeyRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartySearchByKeyResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartySearchListRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartySearchRequest', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartySearchResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.PartyType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.Party = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.Party, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.Party.displayName = 'proto.io.rulelogic.api.Party';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.AuthenticateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.AuthenticateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.AuthenticateRequest.displayName = 'proto.io.rulelogic.api.AuthenticateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.AuthenticateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.AuthenticateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.AuthenticateResponse.displayName = 'proto.io.rulelogic.api.AuthenticateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartySearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartySearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartySearchRequest.displayName = 'proto.io.rulelogic.api.PartySearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartySearchByKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartySearchByKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartySearchByKeyRequest.displayName = 'proto.io.rulelogic.api.PartySearchByKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartySearchByKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartySearchByKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartySearchByKeyResponse.displayName = 'proto.io.rulelogic.api.PartySearchByKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventSubscriberListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventSubscriberListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventSubscriberListRequest.displayName = 'proto.io.rulelogic.api.EventSubscriberListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartySearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartySearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartySearchResponse.displayName = 'proto.io.rulelogic.api.PartySearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.rulelogic.api.PartyListResponse.repeatedFields_, null);
};
goog.inherits(proto.io.rulelogic.api.PartyListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyListResponse.displayName = 'proto.io.rulelogic.api.PartyListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartySearchListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartySearchListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartySearchListRequest.displayName = 'proto.io.rulelogic.api.PartySearchListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlResponse.displayName = 'proto.io.rulelogic.api.PartyDmlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlCreateResponse.displayName = 'proto.io.rulelogic.api.PartyDmlCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlCreateRequest.displayName = 'proto.io.rulelogic.api.PartyDmlCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlUpdateResponse.displayName = 'proto.io.rulelogic.api.PartyDmlUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlUpdateRequest.displayName = 'proto.io.rulelogic.api.PartyDmlUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlDeleteResponse.displayName = 'proto.io.rulelogic.api.PartyDmlDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.PartyDmlDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.PartyDmlDeleteRequest.displayName = 'proto.io.rulelogic.api.PartyDmlDeleteRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.Party.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.Party.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.Party} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Party.toObject = function(includeInstance, msg) {
  var f, obj = {
    partypk: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nickname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    company: jspb.Message.getFieldWithDefault(msg, 7, ""),
    login: jspb.Message.getFieldWithDefault(msg, 8, ""),
    password: jspb.Message.getFieldWithDefault(msg, 9, ""),
    recordpk: jspb.Message.getFieldWithDefault(msg, 10, ""),
    email: jspb.Message.getFieldWithDefault(msg, 11, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 12, ""),
    recordtype: jspb.Message.getFieldWithDefault(msg, 13, 0),
    recordstatus: jspb.Message.getFieldWithDefault(msg, 14, ""),
    visibility: jspb.Message.getFieldWithDefault(msg, 15, 0),
    omd: (f = msg.getOmd()) && common_common_pb.Omd.toObject(includeInstance, f),
    issuperuser: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isrecordowner: jspb.Message.getBooleanFieldWithDefault(msg, 20, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.Party.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.Party;
  return proto.io.rulelogic.api.Party.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.Party} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.Party.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartypk(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompany(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordpk(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 13:
      var value = /** @type {!proto.io.rulelogic.api.PartyType} */ (reader.readEnum());
      msg.setRecordtype(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordstatus(value);
      break;
    case 15:
      var value = /** @type {!proto.io.rulelogic.api.VisibilityType} */ (reader.readEnum());
      msg.setVisibility(value);
      break;
    case 16:
      var value = new common_common_pb.Omd;
      reader.readMessage(value,common_common_pb.Omd.deserializeBinaryFromReader);
      msg.setOmd(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuperuser(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrecordowner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.Party.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.Party.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.Party} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Party.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartypk();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCompany();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRecordtype();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getRecordstatus();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getOmd();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      common_common_pb.Omd.serializeBinaryToWriter
    );
  }
  f = message.getIssuperuser();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsrecordowner();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
};


/**
 * optional string partyPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getPartypk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setPartypk = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string firstName = 4;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lastName = 5;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string nickname = 6;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setNickname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string company = 7;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getCompany = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setCompany = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string login = 8;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string password = 9;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string recordPk = 10;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getRecordpk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setRecordpk = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string email = 11;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string mobile = 12;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional PartyType recordType = 13;
 * @return {!proto.io.rulelogic.api.PartyType}
 */
proto.io.rulelogic.api.Party.prototype.getRecordtype = function() {
  return /** @type {!proto.io.rulelogic.api.PartyType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.io.rulelogic.api.PartyType} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setRecordtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional string recordStatus = 14;
 * @return {string}
 */
proto.io.rulelogic.api.Party.prototype.getRecordstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setRecordstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional VisibilityType visibility = 15;
 * @return {!proto.io.rulelogic.api.VisibilityType}
 */
proto.io.rulelogic.api.Party.prototype.getVisibility = function() {
  return /** @type {!proto.io.rulelogic.api.VisibilityType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.io.rulelogic.api.VisibilityType} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setVisibility = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional Omd omd = 16;
 * @return {?proto.io.rulelogic.api.Omd}
 */
proto.io.rulelogic.api.Party.prototype.getOmd = function() {
  return /** @type{?proto.io.rulelogic.api.Omd} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Omd, 16));
};


/**
 * @param {?proto.io.rulelogic.api.Omd|undefined} value
 * @return {!proto.io.rulelogic.api.Party} returns this
*/
proto.io.rulelogic.api.Party.prototype.setOmd = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.clearOmd = function() {
  return this.setOmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Party.prototype.hasOmd = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool isSuperUser = 17;
 * @return {boolean}
 */
proto.io.rulelogic.api.Party.prototype.getIssuperuser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setIssuperuser = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool isRecordOwner = 20;
 * @return {boolean}
 */
proto.io.rulelogic.api.Party.prototype.getIsrecordowner = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Party} returns this
 */
proto.io.rulelogic.api.Party.prototype.setIsrecordowner = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.AuthenticateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.AuthenticateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.AuthenticateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    login: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hashedcredentials: jspb.Message.getFieldWithDefault(msg, 3, ""),
    loginrequeststatus: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.AuthenticateRequest}
 */
proto.io.rulelogic.api.AuthenticateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.AuthenticateRequest;
  return proto.io.rulelogic.api.AuthenticateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.AuthenticateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.AuthenticateRequest}
 */
proto.io.rulelogic.api.AuthenticateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedcredentials(value);
      break;
    case 4:
      var value = /** @type {!proto.io.rulelogic.api.LoginRequestStatus} */ (reader.readEnum());
      msg.setLoginrequeststatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.AuthenticateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.AuthenticateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.AuthenticateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHashedcredentials();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLoginrequeststatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string login = 1;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateRequest} returns this
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateRequest} returns this
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hashedCredentials = 3;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.getHashedcredentials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateRequest} returns this
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.setHashedcredentials = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional LoginRequestStatus loginRequestStatus = 4;
 * @return {!proto.io.rulelogic.api.LoginRequestStatus}
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.getLoginrequeststatus = function() {
  return /** @type {!proto.io.rulelogic.api.LoginRequestStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.rulelogic.api.LoginRequestStatus} value
 * @return {!proto.io.rulelogic.api.AuthenticateRequest} returns this
 */
proto.io.rulelogic.api.AuthenticateRequest.prototype.setLoginrequeststatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.AuthenticateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.AuthenticateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.AuthenticateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logintoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f),
    loginstatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lastlogindate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    loginstatusmessage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hashedcredentials: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userauthenticated: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    issuperuser: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.AuthenticateResponse}
 */
proto.io.rulelogic.api.AuthenticateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.AuthenticateResponse;
  return proto.io.rulelogic.api.AuthenticateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.AuthenticateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.AuthenticateResponse}
 */
proto.io.rulelogic.api.AuthenticateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogintoken(value);
      break;
    case 2:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    case 3:
      var value = /** @type {!proto.io.rulelogic.api.LoginStatus} */ (reader.readEnum());
      msg.setLoginstatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastlogindate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginstatusmessage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedcredentials(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserauthenticated(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuperuser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.AuthenticateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.AuthenticateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.AuthenticateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogintoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
  f = message.getLoginstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLastlogindate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLoginstatusmessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHashedcredentials();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserauthenticated();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIssuperuser();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string loginToken = 1;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getLogintoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setLogintoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Party party = 2;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 2));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
*/
proto.io.rulelogic.api.AuthenticateResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LoginStatus loginStatus = 3;
 * @return {!proto.io.rulelogic.api.LoginStatus}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getLoginstatus = function() {
  return /** @type {!proto.io.rulelogic.api.LoginStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.rulelogic.api.LoginStatus} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setLoginstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string lastLoginDate = 4;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getLastlogindate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setLastlogindate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string loginStatusMessage = 5;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getLoginstatusmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setLoginstatusmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string hashedCredentials = 6;
 * @return {string}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getHashedcredentials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setHashedcredentials = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool userAuthenticated = 7;
 * @return {boolean}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getUserauthenticated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setUserauthenticated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool isSuperUser = 8;
 * @return {boolean}
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.getIssuperuser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.AuthenticateResponse} returns this
 */
proto.io.rulelogic.api.AuthenticateResponse.prototype.setIssuperuser = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartySearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartySearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    recordperpage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    login: jspb.Message.getFieldWithDefault(msg, 10, ""),
    password: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartySearchRequest}
 */
proto.io.rulelogic.api.PartySearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartySearchRequest;
  return proto.io.rulelogic.api.PartySearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartySearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartySearchRequest}
 */
proto.io.rulelogic.api.PartySearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordperpage(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartySearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartySearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRecordperpage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchRequest} returns this
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 pageNumber = 2;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchRequest} returns this
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 recordPerPage = 3;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.getRecordperpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchRequest} returns this
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.setRecordperpage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string login = 10;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchRequest} returns this
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string password = 11;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchRequest} returns this
 */
proto.io.rulelogic.api.PartySearchRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartySearchByKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartySearchByKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartySearchByKeyRequest}
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartySearchByKeyRequest;
  return proto.io.rulelogic.api.PartySearchByKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartySearchByKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartySearchByKeyRequest}
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartySearchByKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartySearchByKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchByKeyRequest} returns this
 */
proto.io.rulelogic.api.PartySearchByKeyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartySearchByKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartySearchByKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f),
    recordfound: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartySearchByKeyResponse}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartySearchByKeyResponse;
  return proto.io.rulelogic.api.PartySearchByKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartySearchByKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartySearchByKeyResponse}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecordfound(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartySearchByKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartySearchByKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
  f = message.getRecordfound();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional Party party = 1;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 1));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartySearchByKeyResponse} returns this
*/
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartySearchByKeyResponse} returns this
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool recordFound = 2;
 * @return {boolean}
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.getRecordfound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.PartySearchByKeyResponse} returns this
 */
proto.io.rulelogic.api.PartySearchByKeyResponse.prototype.setRecordfound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.EventSubscriberListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.EventSubscriberListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventSubscriberListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    authdetail: (f = msg.getAuthdetail()) && common_common_pb.AuthDetail.toObject(includeInstance, f),
    eventrecordpk: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventSubscriberListRequest;
  return proto.io.rulelogic.api.EventSubscriberListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventSubscriberListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = new common_common_pb.AuthDetail;
      reader.readMessage(value,common_common_pb.AuthDetail.deserializeBinaryFromReader);
      msg.setAuthdetail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventrecordpk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.EventSubscriberListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventSubscriberListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventSubscriberListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAuthdetail();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.AuthDetail.serializeBinaryToWriter
    );
  }
  f = message.getEventrecordpk();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest} returns this
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest} returns this
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional AuthDetail authDetail = 3;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.getAuthdetail = function() {
  return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
    jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 3));
};


/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest} returns this
*/
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.setAuthdetail = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest} returns this
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.clearAuthdetail = function() {
  return this.setAuthdetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.hasAuthdetail = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string eventRecordPk = 4;
 * @return {string}
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.getEventrecordpk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventSubscriberListRequest} returns this
 */
proto.io.rulelogic.api.EventSubscriberListRequest.prototype.setEventrecordpk = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartySearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartySearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagenumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recordperpage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartySearchResponse}
 */
proto.io.rulelogic.api.PartySearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartySearchResponse;
  return proto.io.rulelogic.api.PartySearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartySearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartySearchResponse}
 */
proto.io.rulelogic.api.PartySearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordperpage(value);
      break;
    case 3:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartySearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartySearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRecordperpage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 pageNumber = 1;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchResponse} returns this
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 recordPerPage = 2;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.getRecordperpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchResponse} returns this
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.setRecordperpage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Party party = 3;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 3));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartySearchResponse} returns this
*/
proto.io.rulelogic.api.PartySearchResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartySearchResponse} returns this
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartySearchResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.rulelogic.api.PartyListResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    partiesList: jspb.Message.toObjectList(msg.getPartiesList(),
    proto.io.rulelogic.api.Party.toObject, includeInstance),
    responsestatus: (f = msg.getResponsestatus()) && common_common_pb.ResponseStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyListResponse}
 */
proto.io.rulelogic.api.PartyListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyListResponse;
  return proto.io.rulelogic.api.PartyListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyListResponse}
 */
proto.io.rulelogic.api.PartyListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.addParties(value);
      break;
    case 4:
      var value = new common_common_pb.ResponseStatus;
      reader.readMessage(value,common_common_pb.ResponseStatus.deserializeBinaryFromReader);
      msg.setResponsestatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPartiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
  f = message.getResponsestatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.ResponseStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
 */
proto.io.rulelogic.api.PartyListResponse.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
 */
proto.io.rulelogic.api.PartyListResponse.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Party parties = 3;
 * @return {!Array<!proto.io.rulelogic.api.Party>}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.getPartiesList = function() {
  return /** @type{!Array<!proto.io.rulelogic.api.Party>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.rulelogic.api.Party, 3));
};


/**
 * @param {!Array<!proto.io.rulelogic.api.Party>} value
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
*/
proto.io.rulelogic.api.PartyListResponse.prototype.setPartiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.rulelogic.api.Party=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.addParties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.rulelogic.api.Party, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
 */
proto.io.rulelogic.api.PartyListResponse.prototype.clearPartiesList = function() {
  return this.setPartiesList([]);
};


/**
 * optional ResponseStatus responseStatus = 4;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.getResponsestatus = function() {
  return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
    jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 4));
};


/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
*/
proto.io.rulelogic.api.PartyListResponse.prototype.setResponsestatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyListResponse} returns this
 */
proto.io.rulelogic.api.PartyListResponse.prototype.clearResponsestatus = function() {
  return this.setResponsestatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyListResponse.prototype.hasResponsestatus = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartySearchListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartySearchListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchscope: jspb.Message.getFieldWithDefault(msg, 3, 0),
    login: jspb.Message.getFieldWithDefault(msg, 10, ""),
    token: jspb.Message.getFieldWithDefault(msg, 11, ""),
    partypk: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartySearchListRequest}
 */
proto.io.rulelogic.api.PartySearchListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartySearchListRequest;
  return proto.io.rulelogic.api.PartySearchListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartySearchListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartySearchListRequest}
 */
proto.io.rulelogic.api.PartySearchListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {!proto.io.rulelogic.api.SearchScope} */ (reader.readEnum());
      msg.setSearchscope(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartypk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartySearchListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartySearchListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartySearchListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSearchscope();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPartypk();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SearchScope searchScope = 3;
 * @return {!proto.io.rulelogic.api.SearchScope}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getSearchscope = function() {
  return /** @type {!proto.io.rulelogic.api.SearchScope} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.rulelogic.api.SearchScope} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setSearchscope = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string login = 10;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string token = 11;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string partyPk = 12;
 * @return {string}
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.getPartypk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartySearchListRequest} returns this
 */
proto.io.rulelogic.api.PartySearchListRequest.prototype.setPartypk = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responsetext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlResponse}
 */
proto.io.rulelogic.api.PartyDmlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlResponse;
  return proto.io.rulelogic.api.PartyDmlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlResponse}
 */
proto.io.rulelogic.api.PartyDmlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsetext(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponsetext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional string responseCode = 1;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.getResponsecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.setResponsecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string responseText = 2;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.getResponsetext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.setResponsetext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool status = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.PartyDmlResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Party party = 4;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 4));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlResponse} returns this
*/
proto.io.rulelogic.api.PartyDmlResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responsetext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlCreateResponse;
  return proto.io.rulelogic.api.PartyDmlCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsetext(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponsetext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional string responseCode = 1;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.getResponsecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.setResponsecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string responseText = 2;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.getResponsetext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.setResponsetext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool status = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Party party = 4;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 4));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse} returns this
*/
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlCreateResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f),
    requestmessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateRequest}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlCreateRequest;
  return proto.io.rulelogic.api.PartyDmlCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateRequest}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
  f = message.getRequestmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Party party = 1;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 1));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateRequest} returns this
*/
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.hasParty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.getRequestmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.PartyDmlCreateRequest.prototype.setRequestmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responsetext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlUpdateResponse;
  return proto.io.rulelogic.api.PartyDmlUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsetext(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponsetext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional string responseCode = 1;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.getResponsecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.setResponsecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string responseText = 2;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.getResponsetext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.setResponsetext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool status = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Party party = 4;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 4));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse} returns this
*/
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlUpdateResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateRequest}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlUpdateRequest;
  return proto.io.rulelogic.api.PartyDmlUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateRequest}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional Party party = 1;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 1));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateRequest} returns this
*/
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlUpdateRequest.prototype.hasParty = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responsetext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteResponse}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlDeleteResponse;
  return proto.io.rulelogic.api.PartyDmlDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteResponse}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsetext(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponsetext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string responseCode = 1;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.getResponsecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.setResponsecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string responseText = 2;
 * @return {string}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.getResponsetext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.setResponsetext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool status = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.PartyDmlDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.rulelogic.api.PartyDmlDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    party: (f = msg.getParty()) && proto.io.rulelogic.api.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteRequest}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.PartyDmlDeleteRequest;
  return proto.io.rulelogic.api.PartyDmlDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteRequest}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.rulelogic.api.Party;
      reader.readMessage(value,proto.io.rulelogic.api.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.PartyDmlDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.PartyDmlDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.rulelogic.api.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional Party party = 1;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.getParty = function() {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Party, 1));
};


/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteRequest} returns this
*/
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.PartyDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.PartyDmlDeleteRequest.prototype.hasParty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.io.rulelogic.api.PartyType = {
  PERSON: 0,
  ORGANISATION: 1
};

/**
 * @enum {number}
 */
proto.io.rulelogic.api.LoginStatus = {
  SUCCESS: 0,
  FAIL: 1,
  ACCOUNT_DISABLED: 3
};

/**
 * @enum {number}
 */
proto.io.rulelogic.api.LoginRequestStatus = {
  CREDINTIALS_FULLY_SUPPLIED: 0,
  CREDINTIALS_LOGIN_MISSING: 1,
  CREDINTIALS_PASSWORD_MISSING: 2,
  CREDENTIALS_STATUS_UNKNOWN: 3
};

goog.object.extend(exports, proto.io.rulelogic.api);
