// source: event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = function () {
  return this || window || global || self || Function('return this')();
}.call(null);

var common_common_pb = require('./common_pb.js');
goog.object.extend(proto, common_common_pb);
var party_pb = require('./party_pb.js');
goog.object.extend(proto, party_pb);
goog.exportSymbol('proto.io.rulelogic.api.DeriveStatusResponse', null, global);
goog.exportSymbol('proto.io.rulelogic.api.Event', null, global);
goog.exportSymbol('proto.io.rulelogic.api.EventAnalytics', null, global);
goog.exportSymbol('proto.io.rulelogic.api.EventDmlCreateRequest', null, global);
goog.exportSymbol(
  'proto.io.rulelogic.api.EventDmlCreateResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.EventDmlDeleteResponse',
  null,
  global
);
goog.exportSymbol('proto.io.rulelogic.api.EventDmlUpdateRequest', null, global);
goog.exportSymbol(
  'proto.io.rulelogic.api.EventDmlUpdateResponse',
  null,
  global
);
goog.exportSymbol('proto.io.rulelogic.api.EventInfo', null, global);
goog.exportSymbol('proto.io.rulelogic.api.EventListResponse', null, global);
goog.exportSymbol(
  'proto.io.rulelogic.api.EventSearchSingleResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.EventStatusChangeRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.SearchListForRuleRequest',
  null,
  global
);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventInfo.displayName =
    'proto.io.rulelogic.api.EventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventAnalytics = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventAnalytics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventAnalytics.displayName =
    'proto.io.rulelogic.api.EventAnalytics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.Event = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.Event.displayName = 'proto.io.rulelogic.api.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.DeriveStatusResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.DeriveStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.DeriveStatusResponse.displayName =
    'proto.io.rulelogic.api.DeriveStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventSearchSingleResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventSearchSingleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventSearchSingleResponse.displayName =
    'proto.io.rulelogic.api.EventSearchSingleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventListResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.io.rulelogic.api.EventListResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.io.rulelogic.api.EventListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventListResponse.displayName =
    'proto.io.rulelogic.api.EventListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.SearchListForRuleRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.SearchListForRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.SearchListForRuleRequest.displayName =
    'proto.io.rulelogic.api.SearchListForRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventStatusChangeRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventStatusChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventStatusChangeRequest.displayName =
    'proto.io.rulelogic.api.EventStatusChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventDmlCreateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventDmlCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventDmlCreateRequest.displayName =
    'proto.io.rulelogic.api.EventDmlCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventDmlCreateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventDmlCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventDmlCreateResponse.displayName =
    'proto.io.rulelogic.api.EventDmlCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventDmlUpdateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventDmlUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventDmlUpdateResponse.displayName =
    'proto.io.rulelogic.api.EventDmlUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventDmlUpdateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventDmlUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventDmlUpdateRequest.displayName =
    'proto.io.rulelogic.api.EventDmlUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.EventDmlDeleteResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.EventDmlDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.EventDmlDeleteResponse.displayName =
    'proto.io.rulelogic.api.EventDmlDeleteResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventInfo.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventInfo.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        ownerpartypk: jspb.Message.getFieldWithDefault(msg, 2, ''),
        ownertitle: jspb.Message.getFieldWithDefault(msg, 3, ''),
        recordtitlefirstletter: jspb.Message.getFieldWithDefault(msg, 4, ''),
        recordtitlecolor: jspb.Message.getFieldWithDefault(msg, 5, ''),
        isstatuson: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        querytotalrecord: jspb.Message.getFieldWithDefault(msg, 10, 0),
        isviewerpartyrecordowner: jspb.Message.getBooleanFieldWithDefault(
          msg,
          20,
          false
        ),
        hasviewersubscribed: jspb.Message.getBooleanFieldWithDefault(
          msg,
          21,
          false
        ),
        hasviewerfavouritedrecord: jspb.Message.getBooleanFieldWithDefault(
          msg,
          22,
          false
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventInfo}
 */
proto.io.rulelogic.api.EventInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventInfo();
  return proto.io.rulelogic.api.EventInfo.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventInfo}
 */
proto.io.rulelogic.api.EventInfo.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwnerpartypk(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwnertitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordtitlefirstletter(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordtitlecolor(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsstatuson(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setQuerytotalrecord(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsviewerpartyrecordowner(value);
        break;
      case 21:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHasviewersubscribed(value);
        break;
      case 22:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHasviewerfavouritedrecord(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.EventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventInfo.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwnerpartypk();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOwnertitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getRecordtitlefirstletter();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getRecordtitlecolor();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getIsstatuson();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getQuerytotalrecord();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getIsviewerpartyrecordowner();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getHasviewersubscribed();
  if (f) {
    writer.writeBool(21, f);
  }
  f = message.getHasviewerfavouritedrecord();
  if (f) {
    writer.writeBool(22, f);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventInfo.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string ownerPartyPk = 2;
 * @return {string}
 */
proto.io.rulelogic.api.EventInfo.prototype.getOwnerpartypk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setOwnerpartypk = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string ownerTitle = 3;
 * @return {string}
 */
proto.io.rulelogic.api.EventInfo.prototype.getOwnertitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setOwnertitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string recordTitleFirstLetter = 4;
 * @return {string}
 */
proto.io.rulelogic.api.EventInfo.prototype.getRecordtitlefirstletter =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 4, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setRecordtitlefirstletter =
  function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
  };

/**
 * optional string recordTitleColor = 5;
 * @return {string}
 */
proto.io.rulelogic.api.EventInfo.prototype.getRecordtitlecolor = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setRecordtitlecolor = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool isStatusOn = 9;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventInfo.prototype.getIsstatuson = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setIsstatuson = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional int32 queryTotalRecord = 10;
 * @return {number}
 */
proto.io.rulelogic.api.EventInfo.prototype.getQuerytotalrecord = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setQuerytotalrecord = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional bool isViewerPartyRecordOwner = 20;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventInfo.prototype.getIsviewerpartyrecordowner =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 20, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setIsviewerpartyrecordowner =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 20, value);
  };

/**
 * optional bool hasViewerSubscribed = 21;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventInfo.prototype.getHasviewersubscribed =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 21, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setHasviewersubscribed = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};

/**
 * optional bool hasViewerFavouritedRecord = 22;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventInfo.prototype.getHasviewerfavouritedrecord =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 22, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventInfo} returns this
 */
proto.io.rulelogic.api.EventInfo.prototype.setHasviewerfavouritedrecord =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 22, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventAnalytics.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventAnalytics.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventAnalytics} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventAnalytics.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        rulescount: jspb.Message.getFieldWithDefault(msg, 10, 0),
        actionscount: jspb.Message.getFieldWithDefault(msg, 11, 0),
        subscriberscount: jspb.Message.getFieldWithDefault(msg, 12, 0),
        favouritescount: jspb.Message.getFieldWithDefault(msg, 13, 0),
        reviewscount: jspb.Message.getFieldWithDefault(msg, 14, 0),
        reviewrating: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          15,
          0.0
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventAnalytics}
 */
proto.io.rulelogic.api.EventAnalytics.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventAnalytics();
  return proto.io.rulelogic.api.EventAnalytics.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventAnalytics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventAnalytics}
 */
proto.io.rulelogic.api.EventAnalytics.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRulescount(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setActionscount(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSubscriberscount(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setFavouritescount(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setReviewscount(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReviewrating(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.EventAnalytics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventAnalytics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventAnalytics.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getRulescount();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getActionscount();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getSubscriberscount();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getFavouritescount();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getReviewscount();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getReviewrating();
  if (f !== 0.0) {
    writer.writeDouble(15, f);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 rulesCount = 10;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getRulescount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setRulescount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int32 actionsCount = 11;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getActionscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setActionscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional int32 subscribersCount = 12;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getSubscriberscount =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFieldWithDefault(this, 12, 0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setSubscriberscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 favouritesCount = 13;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getFavouritescount =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFieldWithDefault(this, 13, 0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setFavouritescount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 reviewsCount = 14;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getReviewscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setReviewscount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional double reviewRating = 15;
 * @return {number}
 */
proto.io.rulelogic.api.EventAnalytics.prototype.getReviewrating = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventAnalytics} returns this
 */
proto.io.rulelogic.api.EventAnalytics.prototype.setReviewrating = function (
  value
) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.Event.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.Event.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.Event} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.Event.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        code: jspb.Message.getFieldWithDefault(msg, 2, ''),
        title: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        pricecurrency: jspb.Message.getFieldWithDefault(msg, 5, ''),
        unitprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
        partypk: jspb.Message.getFieldWithDefault(msg, 8, ''),
        recordenabled: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
        recordstatus: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
        ownerparty:
          (f = msg.getOwnerparty()) &&
          party_pb.Party.toObject(includeInstance, f),
        isrecordowner: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
        info:
          (f = msg.getInfo()) &&
          proto.io.rulelogic.api.EventInfo.toObject(includeInstance, f),
        analytics:
          (f = msg.getAnalytics()) &&
          proto.io.rulelogic.api.EventAnalytics.toObject(includeInstance, f),
        visibility: jspb.Message.getFieldWithDefault(msg, 31, 0),
        omd:
          (f = msg.getOmd()) &&
          common_common_pb.Omd.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.Event.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.Event();
  return proto.io.rulelogic.api.Event.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.Event.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPricecurrency(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setUnitprice(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPartypk(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRecordenabled(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRecordstatus(value);
        break;
      case 19:
        var value = new party_pb.Party();
        reader.readMessage(value, party_pb.Party.deserializeBinaryFromReader);
        msg.setOwnerparty(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsrecordowner(value);
        break;
      case 21:
        var value = new proto.io.rulelogic.api.EventInfo();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.EventInfo.deserializeBinaryFromReader
        );
        msg.setInfo(value);
        break;
      case 22:
        var value = new proto.io.rulelogic.api.EventAnalytics();
        reader.readMessage(
          value,
          proto.io.rulelogic.api.EventAnalytics.deserializeBinaryFromReader
        );
        msg.setAnalytics(value);
        break;
      case 31:
        var value = /** @type {!proto.io.rulelogic.api.VisibilityType} */ (
          reader.readEnum()
        );
        msg.setVisibility(value);
        break;
      case 35:
        var value = new common_common_pb.Omd();
        reader.readMessage(
          value,
          common_common_pb.Omd.deserializeBinaryFromReader
        );
        msg.setOmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.Event.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Event.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getPricecurrency();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getUnitprice();
  if (f !== 0.0) {
    writer.writeFloat(6, f);
  }
  f = message.getPartypk();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getRecordenabled();
  if (f) {
    writer.writeBool(10, f);
  }
  f = message.getRecordstatus();
  if (f) {
    writer.writeBool(16, f);
  }
  f = message.getOwnerparty();
  if (f != null) {
    writer.writeMessage(19, f, party_pb.Party.serializeBinaryToWriter);
  }
  f = message.getIsrecordowner();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.io.rulelogic.api.EventInfo.serializeBinaryToWriter
    );
  }
  f = message.getAnalytics();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.io.rulelogic.api.EventAnalytics.serializeBinaryToWriter
    );
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(31, f);
  }
  f = message.getOmd();
  if (f != null) {
    writer.writeMessage(35, f, common_common_pb.Omd.serializeBinaryToWriter);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string title = 3;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string priceCurrency = 5;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getPricecurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setPricecurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional float unitPrice = 6;
 * @return {number}
 */
proto.io.rulelogic.api.Event.prototype.getUnitprice = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setUnitprice = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

/**
 * optional string partyPk = 8;
 * @return {string}
 */
proto.io.rulelogic.api.Event.prototype.getPartypk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setPartypk = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional bool recordEnabled = 10;
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.getRecordenabled = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 10, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setRecordenabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * optional bool recordStatus = 16;
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.getRecordstatus = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 16, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setRecordstatus = function (value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};

/**
 * optional Party ownerParty = 19;
 * @return {?proto.io.rulelogic.api.Party}
 */
proto.io.rulelogic.api.Event.prototype.getOwnerparty = function () {
  return /** @type{?proto.io.rulelogic.api.Party} */ (
    jspb.Message.getWrapperField(this, party_pb.Party, 19)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Party|undefined} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setOwnerparty = function (value) {
  return jspb.Message.setWrapperField(this, 19, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.clearOwnerparty = function () {
  return this.setOwnerparty(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.hasOwnerparty = function () {
  return jspb.Message.getField(this, 19) != null;
};

/**
 * optional bool isRecordOwner = 20;
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.getIsrecordowner = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 20, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setIsrecordowner = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};

/**
 * optional EventInfo info = 21;
 * @return {?proto.io.rulelogic.api.EventInfo}
 */
proto.io.rulelogic.api.Event.prototype.getInfo = function () {
  return /** @type{?proto.io.rulelogic.api.EventInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.EventInfo, 21)
  );
};

/**
 * @param {?proto.io.rulelogic.api.EventInfo|undefined} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setInfo = function (value) {
  return jspb.Message.setWrapperField(this, 21, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.clearInfo = function () {
  return this.setInfo(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.hasInfo = function () {
  return jspb.Message.getField(this, 21) != null;
};

/**
 * optional EventAnalytics analytics = 22;
 * @return {?proto.io.rulelogic.api.EventAnalytics}
 */
proto.io.rulelogic.api.Event.prototype.getAnalytics = function () {
  return /** @type{?proto.io.rulelogic.api.EventAnalytics} */ (
    jspb.Message.getWrapperField(
      this,
      proto.io.rulelogic.api.EventAnalytics,
      22
    )
  );
};

/**
 * @param {?proto.io.rulelogic.api.EventAnalytics|undefined} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setAnalytics = function (value) {
  return jspb.Message.setWrapperField(this, 22, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.clearAnalytics = function () {
  return this.setAnalytics(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.hasAnalytics = function () {
  return jspb.Message.getField(this, 22) != null;
};

/**
 * optional VisibilityType visibility = 31;
 * @return {!proto.io.rulelogic.api.VisibilityType}
 */
proto.io.rulelogic.api.Event.prototype.getVisibility = function () {
  return /** @type {!proto.io.rulelogic.api.VisibilityType} */ (
    jspb.Message.getFieldWithDefault(this, 31, 0)
  );
};

/**
 * @param {!proto.io.rulelogic.api.VisibilityType} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setVisibility = function (value) {
  return jspb.Message.setProto3EnumField(this, 31, value);
};

/**
 * optional Omd omd = 35;
 * @return {?proto.io.rulelogic.api.Omd}
 */
proto.io.rulelogic.api.Event.prototype.getOmd = function () {
  return /** @type{?proto.io.rulelogic.api.Omd} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Omd, 35)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Omd|undefined} value
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.setOmd = function (value) {
  return jspb.Message.setWrapperField(this, 35, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Event} returns this
 */
proto.io.rulelogic.api.Event.prototype.clearOmd = function () {
  return this.setOmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Event.prototype.hasOmd = function () {
  return jspb.Message.getField(this, 35) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.DeriveStatusResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.DeriveStatusResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.DeriveStatusResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.DeriveStatusResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        currentstatus: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        derivedstatus: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        shouldstatuschange: jspb.Message.getBooleanFieldWithDefault(
          msg,
          3,
          false
        ),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse}
 */
proto.io.rulelogic.api.DeriveStatusResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.DeriveStatusResponse();
  return proto.io.rulelogic.api.DeriveStatusResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.DeriveStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse}
 */
proto.io.rulelogic.api.DeriveStatusResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setCurrentstatus(value);
          break;
        case 2:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setDerivedstatus(value);
          break;
        case 3:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setShouldstatuschange(value);
          break;
        case 4:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.DeriveStatusResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.DeriveStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.DeriveStatusResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getCurrentstatus();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getDerivedstatus();
  if (f) {
    writer.writeBool(2, f);
  }
  f = message.getShouldstatuschange();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getResponsestatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.ResponseStatus.serializeBinaryToWriter
    );
  }
};

/**
 * optional bool currentStatus = 1;
 * @return {boolean}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.getCurrentstatus =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 1, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse} returns this
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.setCurrentstatus =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 1, value);
  };

/**
 * optional bool derivedStatus = 2;
 * @return {boolean}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.getDerivedstatus =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 2, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse} returns this
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.setDerivedstatus =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
  };

/**
 * optional bool shouldStatusChange = 3;
 * @return {boolean}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.getShouldstatuschange =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 3, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse} returns this
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.setShouldstatuschange =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 3, value);
  };

/**
 * optional ResponseStatus responseStatus = 4;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 4)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse} returns this
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.DeriveStatusResponse} returns this
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.DeriveStatusResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 4) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventSearchSingleResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.EventSearchSingleResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventSearchSingleResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventSearchSingleResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        event:
          (f = msg.getEvent()) &&
          proto.io.rulelogic.api.Event.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
        recordmetadata:
          (f = msg.getRecordmetadata()) &&
          common_common_pb.RecordMetadata.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventSearchSingleResponse();
  return proto.io.rulelogic.api.EventSearchSingleResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventSearchSingleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.setEvent(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        case 3:
          var value = new common_common_pb.RecordMetadata();
          reader.readMessage(
            value,
            common_common_pb.RecordMetadata.deserializeBinaryFromReader
          );
          msg.setRecordmetadata(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventSearchSingleResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventSearchSingleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventSearchSingleResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEvent();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Event.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
    f = message.getRecordmetadata();
    if (f != null) {
      writer.writeMessage(
        3,
        f,
        common_common_pb.RecordMetadata.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Event event = 1;
 * @return {?proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.getEvent =
  function () {
    return /** @type{?proto.io.rulelogic.api.Event} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Event, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Event|undefined} value
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.setEvent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.clearEvent =
  function () {
    return this.setEvent(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.hasEvent =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * optional RecordMetadata recordMetadata = 3;
 * @return {?proto.io.rulelogic.api.RecordMetadata}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.getRecordmetadata =
  function () {
    return /** @type{?proto.io.rulelogic.api.RecordMetadata} */ (
      jspb.Message.getWrapperField(this, common_common_pb.RecordMetadata, 3)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.RecordMetadata|undefined} value
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.setRecordmetadata =
  function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventSearchSingleResponse} returns this
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.clearRecordmetadata =
  function () {
    return this.setRecordmetadata(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventSearchSingleResponse.prototype.hasRecordmetadata =
  function () {
    return jspb.Message.getField(this, 3) != null;
  };

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.rulelogic.api.EventListResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventListResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventListResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventListResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventListResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        eventsList: jspb.Message.toObjectList(
          msg.getEventsList(),
          proto.io.rulelogic.api.Event.toObject,
          includeInstance
        ),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
        paginationinfo:
          (f = msg.getPaginationinfo()) &&
          common_common_pb.PaginationInfo.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventListResponse}
 */
proto.io.rulelogic.api.EventListResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventListResponse();
  return proto.io.rulelogic.api.EventListResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventListResponse}
 */
proto.io.rulelogic.api.EventListResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setSkip(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setLimit(value);
          break;
        case 3:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.addEvents(value);
          break;
        case 4:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        case 5:
          var value = new common_common_pb.PaginationInfo();
          reader.readMessage(
            value,
            common_common_pb.PaginationInfo.deserializeBinaryFromReader
          );
          msg.setPaginationinfo(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventListResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventListResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventListResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.rulelogic.api.Event.serializeBinaryToWriter
    );
  }
  f = message.getResponsestatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.ResponseStatus.serializeBinaryToWriter
    );
  }
  f = message.getPaginationinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.PaginationInfo.serializeBinaryToWriter
    );
  }
};

/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.EventListResponse.prototype.getSkip = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.setSkip = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.EventListResponse.prototype.getLimit = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.setLimit = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * repeated Event events = 3;
 * @return {!Array<!proto.io.rulelogic.api.Event>}
 */
proto.io.rulelogic.api.EventListResponse.prototype.getEventsList = function () {
  return /** @type{!Array<!proto.io.rulelogic.api.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.rulelogic.api.Event, 3)
  );
};

/**
 * @param {!Array<!proto.io.rulelogic.api.Event>} value
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.setEventsList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.io.rulelogic.api.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventListResponse.prototype.addEvents = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.io.rulelogic.api.Event,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.clearEventsList =
  function () {
    return this.setEventsList([]);
  };

/**
 * optional ResponseStatus responseStatus = 4;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventListResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 4)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventListResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 4) != null;
  };

/**
 * optional PaginationInfo paginationInfo = 5;
 * @return {?proto.io.rulelogic.api.PaginationInfo}
 */
proto.io.rulelogic.api.EventListResponse.prototype.getPaginationinfo =
  function () {
    return /** @type{?proto.io.rulelogic.api.PaginationInfo} */ (
      jspb.Message.getWrapperField(this, common_common_pb.PaginationInfo, 5)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.PaginationInfo|undefined} value
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.setPaginationinfo =
  function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventListResponse} returns this
 */
proto.io.rulelogic.api.EventListResponse.prototype.clearPaginationinfo =
  function () {
    return this.setPaginationinfo(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventListResponse.prototype.hasPaginationinfo =
  function () {
    return jspb.Message.getField(this, 5) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.SearchListForRuleRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.SearchListForRuleRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.SearchListForRuleRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.SearchListForRuleRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        rulerecordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
        skip: jspb.Message.getFieldWithDefault(msg, 3, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.SearchListForRuleRequest();
  return proto.io.rulelogic.api.SearchListForRuleRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.SearchListForRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setRulerecordpk(value);
          break;
        case 2:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        case 3:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setSkip(value);
          break;
        case 4:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setLimit(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.SearchListForRuleRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.SearchListForRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.SearchListForRuleRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getRulerecordpk();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
    f = message.getSkip();
    if (f !== 0) {
      writer.writeInt32(3, f);
    }
    f = message.getLimit();
    if (f !== 0) {
      writer.writeInt32(4, f);
    }
  };

/**
 * optional string ruleRecordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.getRulerecordpk =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest} returns this
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.setRulerecordpk =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional AuthDetail authDetail = 2;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest} returns this
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest} returns this
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * optional int32 skip = 3;
 * @return {number}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.getSkip =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest} returns this
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.setSkip = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.getLimit =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.SearchListForRuleRequest} returns this
 */
proto.io.rulelogic.api.SearchListForRuleRequest.prototype.setLimit = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventStatusChangeRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.EventStatusChangeRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventStatusChangeRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventStatusChangeRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        status: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        recordownerpartypk: jspb.Message.getFieldWithDefault(msg, 3, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
        issuperuser: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventStatusChangeRequest();
  return proto.io.rulelogic.api.EventStatusChangeRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventStatusChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setStatus(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setRecordownerpartypk(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        case 13:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setIssuperuser(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventStatusChangeRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventStatusChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventStatusChangeRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getStatus();
    if (f) {
      writer.writeBool(2, f);
    }
    f = message.getRecordownerpartypk();
    if (f.length > 0) {
      writer.writeString(3, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
    f = message.getIssuperuser();
    if (f) {
      writer.writeBool(13, f);
    }
  };

/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.setId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool status = 2;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.getStatus =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 2, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.setStatus = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional string recordOwnerPartyPk = 3;
 * @return {string}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.getRecordownerpartypk =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 3, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.setRecordownerpartypk =
  function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

/**
 * optional bool isSuperUser = 13;
 * @return {boolean}
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.getIssuperuser =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 13, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.io.rulelogic.api.EventStatusChangeRequest} returns this
 */
proto.io.rulelogic.api.EventStatusChangeRequest.prototype.setIssuperuser =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 13, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventDmlCreateRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventDmlCreateRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventDmlCreateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventDmlCreateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        event:
          (f = msg.getEvent()) &&
          proto.io.rulelogic.api.Event.toObject(includeInstance, f),
        requestmessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventDmlCreateRequest();
  return proto.io.rulelogic.api.EventDmlCreateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventDmlCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.setEvent(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setRequestmessage(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventDmlCreateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventDmlCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventDmlCreateRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEvent();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Event.serializeBinaryToWriter
      );
    }
    f = message.getRequestmessage();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Event event = 1;
 * @return {?proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.getEvent = function () {
  return /** @type{?proto.io.rulelogic.api.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Event, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Event|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.setEvent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.clearEvent =
  function () {
    return this.setEvent(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.hasEvent = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.getRequestmessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.setRequestmessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlCreateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventDmlCreateResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventDmlCreateResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventDmlCreateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventDmlCreateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        event:
          (f = msg.getEvent()) &&
          proto.io.rulelogic.api.Event.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventDmlCreateResponse();
  return proto.io.rulelogic.api.EventDmlCreateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventDmlCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.setEvent(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventDmlCreateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventDmlCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventDmlCreateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEvent();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Event.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Event event = 1;
 * @return {?proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.getEvent = function () {
  return /** @type{?proto.io.rulelogic.api.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Event, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Event|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.setEvent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.clearEvent =
  function () {
    return this.setEvent(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.hasEvent = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlCreateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventDmlUpdateResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventDmlUpdateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventDmlUpdateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        event:
          (f = msg.getEvent()) &&
          proto.io.rulelogic.api.Event.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventDmlUpdateResponse();
  return proto.io.rulelogic.api.EventDmlUpdateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventDmlUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.setEvent(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventDmlUpdateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventDmlUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEvent();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Event.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Event event = 1;
 * @return {?proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.getEvent = function () {
  return /** @type{?proto.io.rulelogic.api.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Event, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Event|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.setEvent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.clearEvent =
  function () {
    return this.setEvent(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.hasEvent = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlUpdateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventDmlUpdateRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventDmlUpdateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventDmlUpdateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        event:
          (f = msg.getEvent()) &&
          proto.io.rulelogic.api.Event.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventDmlUpdateRequest();
  return proto.io.rulelogic.api.EventDmlUpdateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventDmlUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Event();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Event.deserializeBinaryFromReader
          );
          msg.setEvent(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventDmlUpdateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventDmlUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getEvent();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Event.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Event event = 1;
 * @return {?proto.io.rulelogic.api.Event}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.getEvent = function () {
  return /** @type{?proto.io.rulelogic.api.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Event, 1)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Event|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.setEvent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.clearEvent =
  function () {
    return this.setEvent(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.hasEvent = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlUpdateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.EventDmlDeleteResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.EventDmlDeleteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.EventDmlDeleteResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.EventDmlDeleteResponse}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.EventDmlDeleteResponse();
  return proto.io.rulelogic.api.EventDmlDeleteResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.EventDmlDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.EventDmlDeleteResponse}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.EventDmlDeleteResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.EventDmlDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.EventDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.setId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.EventDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.EventDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.EventDmlDeleteResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

goog.object.extend(exports, proto.io.rulelogic.api);
