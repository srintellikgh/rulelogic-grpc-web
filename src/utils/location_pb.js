// source: location.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = function () {
  return this || window || global || self || Function('return this')();
}.call(null);

var common_common_pb = require('./common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.io.rulelogic.api.Location', null, global);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlCreateRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlCreateResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlDeleteRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlDeleteResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlUpdateRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationDmlUpdateResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchByCityCountryRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchByGeoLocationRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchByIdRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchByLocationRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchListRequest',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchListResponse',
  null,
  global
);
goog.exportSymbol(
  'proto.io.rulelogic.api.LocationSearchResponse',
  null,
  global
);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.Location = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.Location.displayName =
    'proto.io.rulelogic.api.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.io.rulelogic.api.LocationSearchByLocationRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchByLocationRequest.displayName =
    'proto.io.rulelogic.api.LocationSearchByLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest = function (
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.io.rulelogic.api.LocationSearchByCityCountryRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchByCityCountryRequest.displayName =
    'proto.io.rulelogic.api.LocationSearchByCityCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest = function (
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.io.rulelogic.api.LocationSearchByGeoLocationRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.displayName =
    'proto.io.rulelogic.api.LocationSearchByGeoLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchByIdRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationSearchByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchByIdRequest.displayName =
    'proto.io.rulelogic.api.LocationSearchByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchResponse.displayName =
    'proto.io.rulelogic.api.LocationSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchListRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationSearchListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchListRequest.displayName =
    'proto.io.rulelogic.api.LocationSearchListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationSearchListResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.io.rulelogic.api.LocationSearchListResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.io.rulelogic.api.LocationSearchListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationSearchListResponse.displayName =
    'proto.io.rulelogic.api.LocationSearchListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlCreateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlCreateRequest.displayName =
    'proto.io.rulelogic.api.LocationDmlCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlCreateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlCreateResponse.displayName =
    'proto.io.rulelogic.api.LocationDmlCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlUpdateResponse.displayName =
    'proto.io.rulelogic.api.LocationDmlUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlUpdateRequest.displayName =
    'proto.io.rulelogic.api.LocationDmlUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlDeleteResponse.displayName =
    'proto.io.rulelogic.api.LocationDmlDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.rulelogic.api.LocationDmlDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.rulelogic.api.LocationDmlDeleteRequest.displayName =
    'proto.io.rulelogic.api.LocationDmlDeleteRequest';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.Location.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.Location.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.Location} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.Location.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        recordpk: jspb.Message.getFieldWithDefault(msg, 1, ''),
        locationid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        locationcity: jspb.Message.getFieldWithDefault(msg, 3, ''),
        locationcountry: jspb.Message.getFieldWithDefault(msg, 4, ''),
        timezone: jspb.Message.getFieldWithDefault(msg, 5, ''),
        gmtoffset: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
        timezonecode: jspb.Message.getFieldWithDefault(msg, 7, ''),
        timezonename: jspb.Message.getFieldWithDefault(msg, 8, ''),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
        title: jspb.Message.getFieldWithDefault(msg, 11, ''),
        locationprovider: jspb.Message.getFieldWithDefault(msg, 12, ''),
        omd:
          (f = msg.getOmd()) &&
          common_common_pb.Omd.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.Location.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.Location();
  return proto.io.rulelogic.api.Location.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.Location.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRecordpk(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setLocationid(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setLocationcity(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setLocationcountry(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setTimezone(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setGmtoffset(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setTimezonecode(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setTimezonename(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLatitude(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongitude(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setLocationprovider(value);
        break;
      case 20:
        var value = new common_common_pb.Omd();
        reader.readMessage(
          value,
          common_common_pb.Omd.deserializeBinaryFromReader
        );
        msg.setOmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.Location.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.io.rulelogic.api.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.Location.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRecordpk();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLocationid();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getLocationcity();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getLocationcountry();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getGmtoffset();
  if (f !== 0.0) {
    writer.writeDouble(6, f);
  }
  f = message.getTimezonecode();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getTimezonename();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(9, f);
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(10, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getLocationprovider();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getOmd();
  if (f != null) {
    writer.writeMessage(20, f, common_common_pb.Omd.serializeBinaryToWriter);
  }
};

/**
 * optional string recordPk = 1;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getRecordpk = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setRecordpk = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string locationId = 2;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getLocationid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLocationid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string locationCity = 3;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getLocationcity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLocationcity = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string locationCountry = 4;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getLocationcountry = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLocationcountry = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string timeZone = 5;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getTimezone = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setTimezone = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional double gmtOffset = 6;
 * @return {number}
 */
proto.io.rulelogic.api.Location.prototype.getGmtoffset = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setGmtoffset = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

/**
 * optional string timeZoneCode = 7;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getTimezonecode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setTimezonecode = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string timeZoneName = 8;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getTimezonename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setTimezonename = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional double latitude = 9;
 * @return {number}
 */
proto.io.rulelogic.api.Location.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};

/**
 * optional double longitude = 10;
 * @return {number}
 */
proto.io.rulelogic.api.Location.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};

/**
 * optional string title = 11;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * optional string locationProvider = 12;
 * @return {string}
 */
proto.io.rulelogic.api.Location.prototype.getLocationprovider = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setLocationprovider = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional Omd omd = 20;
 * @return {?proto.io.rulelogic.api.Omd}
 */
proto.io.rulelogic.api.Location.prototype.getOmd = function () {
  return /** @type{?proto.io.rulelogic.api.Omd} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Omd, 20)
  );
};

/**
 * @param {?proto.io.rulelogic.api.Omd|undefined} value
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.setOmd = function (value) {
  return jspb.Message.setWrapperField(this, 20, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.Location} returns this
 */
proto.io.rulelogic.api.Location.prototype.clearOmd = function () {
  return this.setOmd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.Location.prototype.hasOmd = function () {
  return jspb.Message.getField(this, 20) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchByLocationRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchByLocationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchByLocationRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        city: jspb.Message.getFieldWithDefault(msg, 1, ''),
        country: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.rulelogic.api.LocationSearchByLocationRequest();
    return proto.io.rulelogic.api.LocationSearchByLocationRequest.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchByLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setCity(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setCountry(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchByLocationRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchByLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getCity();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getCountry();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string city = 1;
 * @return {string}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.getCity =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.setCity =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional string country = 2;
 * @return {string}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.getCountry =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.setCountry =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchByLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchByLocationRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchByCityCountryRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchByCityCountryRequest.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          city: jspb.Message.getFieldWithDefault(msg, 1, ''),
          country: jspb.Message.getFieldWithDefault(msg, 2, ''),
          authdetail:
            (f = msg.getAuthdetail()) &&
            common_common_pb.AuthDetail.toObject(includeInstance, f),
        };

      if (includeInstance) {
        obj.$jspbMessageInstance = msg;
      }
      return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.rulelogic.api.LocationSearchByCityCountryRequest();
    return proto.io.rulelogic.api.LocationSearchByCityCountryRequest.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setCity(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setCountry(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchByCityCountryRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getCity();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getCountry();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string city = 1;
 * @return {string}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.getCity =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.setCity =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional string country = 2;
 * @return {string}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.getCountry =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.setCountry =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchByCityCountryRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchByCityCountryRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
          longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
          authdetail:
            (f = msg.getAuthdetail()) &&
            common_common_pb.AuthDetail.toObject(includeInstance, f),
        };

      if (includeInstance) {
        obj.$jspbMessageInstance = msg;
      }
      return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.io.rulelogic.api.LocationSearchByGeoLocationRequest();
    return proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readDouble());
          msg.setLatitude(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readDouble());
          msg.setLongitude(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLatitude();
    if (f !== 0.0) {
      writer.writeDouble(1, f);
    }
    f = message.getLongitude();
    if (f !== 0.0) {
      writer.writeDouble(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.getLatitude =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.setLatitude =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value);
  };

/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.getLongitude =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.setLongitude =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchByGeoLocationRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchByGeoLocationRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchByIdRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchByIdRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchByIdRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        locationid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchByIdRequest}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationSearchByIdRequest();
  return proto.io.rulelogic.api.LocationSearchByIdRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchByIdRequest}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setLocationid(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchByIdRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocationid();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string locationId = 1;
 * @return {string}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.getLocationid =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationSearchByIdRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.setLocationid =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchByIdRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchByIdRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchByIdRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.io.rulelogic.api.LocationSearchResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchResponse}
 */
proto.io.rulelogic.api.LocationSearchResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationSearchResponse();
  return proto.io.rulelogic.api.LocationSearchResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchResponse}
 */
proto.io.rulelogic.api.LocationSearchResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.setLocation = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchListRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchListRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchListRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchListRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        searchscope: jspb.Message.getFieldWithDefault(msg, 3, 0),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest}
 */
proto.io.rulelogic.api.LocationSearchListRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationSearchListRequest();
  return proto.io.rulelogic.api.LocationSearchListRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest}
 */
proto.io.rulelogic.api.LocationSearchListRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setSkip(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setLimit(value);
          break;
        case 3:
          var value = /** @type {!proto.io.rulelogic.api.SearchScope} */ (
            reader.readEnum()
          );
          msg.setSearchscope(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchListRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchListRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getSkip();
    if (f !== 0) {
      writer.writeInt32(1, f);
    }
    f = message.getLimit();
    if (f !== 0) {
      writer.writeInt32(2, f);
    }
    f = message.getSearchscope();
    if (f !== 0.0) {
      writer.writeEnum(3, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.getSkip =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.setSkip = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.getLimit =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.setLimit = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional SearchScope searchScope = 3;
 * @return {!proto.io.rulelogic.api.SearchScope}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.getSearchscope =
  function () {
    return /** @type {!proto.io.rulelogic.api.SearchScope} */ (
      jspb.Message.getFieldWithDefault(this, 3, 0)
    );
  };

/**
 * @param {!proto.io.rulelogic.api.SearchScope} value
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.setSearchscope =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 3, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchListRequest} returns this
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchListRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.rulelogic.api.LocationSearchListResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationSearchListResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationSearchListResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationSearchListResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationSearchListResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        locationsList: jspb.Message.toObjectList(
          msg.getLocationsList(),
          proto.io.rulelogic.api.Location.toObject,
          includeInstance
        ),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse}
 */
proto.io.rulelogic.api.LocationSearchListResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationSearchListResponse();
  return proto.io.rulelogic.api.LocationSearchListResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationSearchListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse}
 */
proto.io.rulelogic.api.LocationSearchListResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setSkip(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setLimit(value);
          break;
        case 3:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.addLocations(value);
          break;
        case 4:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationSearchListResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationSearchListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationSearchListResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getSkip();
    if (f !== 0) {
      writer.writeInt32(1, f);
    }
    f = message.getLimit();
    if (f !== 0) {
      writer.writeInt32(2, f);
    }
    f = message.getLocationsList();
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        3,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        4,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional int32 skip = 1;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.getSkip =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.setSkip = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.getLimit =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
  };

/**
 * @param {number} value
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.setLimit =
  function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
  };

/**
 * repeated Location locations = 3;
 * @return {!Array<!proto.io.rulelogic.api.Location>}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.getLocationsList =
  function () {
    return /** @type{!Array<!proto.io.rulelogic.api.Location>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.io.rulelogic.api.Location,
        3
      )
    );
  };

/**
 * @param {!Array<!proto.io.rulelogic.api.Location>} value
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.setLocationsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.io.rulelogic.api.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.addLocations =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      3,
      opt_value,
      proto.io.rulelogic.api.Location,
      opt_index
    );
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.clearLocationsList =
  function () {
    return this.setLocationsList([]);
  };

/**
 * optional ResponseStatus responseStatus = 4;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 4)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationSearchListResponse} returns this
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationSearchListResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 4) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlCreateRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlCreateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlCreateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        requestmessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlCreateRequest();
  return proto.io.rulelogic.api.LocationDmlCreateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setRequestmessage(value);
          break;
        case 3:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlCreateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getRequestmessage();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        3,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.getRequestmessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.setRequestmessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 3;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 3)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlCreateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 3) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlCreateResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlCreateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlCreateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlCreateResponse();
  return proto.io.rulelogic.api.LocationDmlCreateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlCreateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlCreateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlCreateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlUpdateResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlUpdateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlUpdateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlUpdateResponse();
  return proto.io.rulelogic.api.LocationDmlUpdateResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlUpdateResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlUpdateResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlUpdateRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlUpdateRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlUpdateRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        requestmessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlUpdateRequest();
  return proto.io.rulelogic.api.LocationDmlUpdateRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setRequestmessage(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlUpdateRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getRequestmessage();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.getRequestmessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.setRequestmessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlUpdateRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlUpdateRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlDeleteResponse.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlDeleteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlDeleteResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        responsestatus:
          (f = msg.getResponsestatus()) &&
          common_common_pb.ResponseStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlDeleteResponse();
  return proto.io.rulelogic.api.LocationDmlDeleteResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = new common_common_pb.ResponseStatus();
          reader.readMessage(
            value,
            common_common_pb.ResponseStatus.deserializeBinaryFromReader
          );
          msg.setResponsestatus(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlDeleteResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getResponsestatus();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        common_common_pb.ResponseStatus.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional ResponseStatus responseStatus = 2;
 * @return {?proto.io.rulelogic.api.ResponseStatus}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.getResponsestatus =
  function () {
    return /** @type{?proto.io.rulelogic.api.ResponseStatus} */ (
      jspb.Message.getWrapperField(this, common_common_pb.ResponseStatus, 2)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.ResponseStatus|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.setResponsestatus =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteResponse} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.clearResponsestatus =
  function () {
    return this.setResponsestatus(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlDeleteResponse.prototype.hasResponsestatus =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.io.rulelogic.api.LocationDmlDeleteRequest.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.io.rulelogic.api.LocationDmlDeleteRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.io.rulelogic.api.LocationDmlDeleteRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        location:
          (f = msg.getLocation()) &&
          proto.io.rulelogic.api.Location.toObject(includeInstance, f),
        requestmessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        authdetail:
          (f = msg.getAuthdetail()) &&
          common_common_pb.AuthDetail.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.rulelogic.api.LocationDmlDeleteRequest();
  return proto.io.rulelogic.api.LocationDmlDeleteRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.rulelogic.api.LocationDmlDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.io.rulelogic.api.Location();
          reader.readMessage(
            value,
            proto.io.rulelogic.api.Location.deserializeBinaryFromReader
          );
          msg.setLocation(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setRequestmessage(value);
          break;
        case 10:
          var value = new common_common_pb.AuthDetail();
          reader.readMessage(
            value,
            common_common_pb.AuthDetail.deserializeBinaryFromReader
          );
          msg.setAuthdetail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.io.rulelogic.api.LocationDmlDeleteRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.rulelogic.api.LocationDmlDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLocation();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.io.rulelogic.api.Location.serializeBinaryToWriter
      );
    }
    f = message.getRequestmessage();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getAuthdetail();
    if (f != null) {
      writer.writeMessage(
        10,
        f,
        common_common_pb.AuthDetail.serializeBinaryToWriter
      );
    }
  };

/**
 * optional Location location = 1;
 * @return {?proto.io.rulelogic.api.Location}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.getLocation =
  function () {
    return /** @type{?proto.io.rulelogic.api.Location} */ (
      jspb.Message.getWrapperField(this, proto.io.rulelogic.api.Location, 1)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.Location|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.setLocation =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.clearLocation =
  function () {
    return this.setLocation(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.hasLocation =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional string requestMessage = 2;
 * @return {string}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.getRequestmessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.setRequestmessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional AuthDetail authDetail = 10;
 * @return {?proto.io.rulelogic.api.AuthDetail}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.getAuthdetail =
  function () {
    return /** @type{?proto.io.rulelogic.api.AuthDetail} */ (
      jspb.Message.getWrapperField(this, common_common_pb.AuthDetail, 10)
    );
  };

/**
 * @param {?proto.io.rulelogic.api.AuthDetail|undefined} value
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.setAuthdetail =
  function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.io.rulelogic.api.LocationDmlDeleteRequest} returns this
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.clearAuthdetail =
  function () {
    return this.setAuthdetail(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.rulelogic.api.LocationDmlDeleteRequest.prototype.hasAuthdetail =
  function () {
    return jspb.Message.getField(this, 10) != null;
  };

goog.object.extend(exports, proto.io.rulelogic.api);
